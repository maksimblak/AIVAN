version: '3.8'

services:
  aivan:
    build: .
    container_name: aivan-bot
    restart: unless-stopped
    environment:
      # Основные настройки (переопределяются через .env файл)
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}

      # Конфигурация базы данных
      - DB_PATH=/app/data/bot.sqlite3
      - DB_MAX_CONNECTIONS=5

      # Подписки и платежи
      - TRIAL_REQUESTS=${TRIAL_REQUESTS:-10}
      - SUB_DURATION_DAYS=${SUB_DURATION_DAYS:-30}
      - SUBSCRIPTION_PRICE_RUB=${SUBSCRIPTION_PRICE_RUB:-300}
      - ADMIN_IDS=${ADMIN_IDS}
      - CRYPTO_PAY_TOKEN=${CRYPTO_PAY_TOKEN}

      # Прокси (опционально)
      - TELEGRAM_PROXY_URL=${TELEGRAM_PROXY_URL:-}
      - TELEGRAM_PROXY_USER=${TELEGRAM_PROXY_USER:-}
      - TELEGRAM_PROXY_PASS=${TELEGRAM_PROXY_PASS:-}
      - OPENAI_PROXY_URL=${OPENAI_PROXY_URL:-}
      - OPENAI_PROXY_USER=${OPENAI_PROXY_USER:-}
      - OPENAI_PROXY_PASS=${OPENAI_PROXY_PASS:-}

      # Голосовые функции
      - ENABLE_VOICE_MODE=${ENABLE_VOICE_MODE:-1}
      - VOICE_STT_MODEL=${VOICE_STT_MODEL:-whisper-1}
      - VOICE_TTS_MODEL=${VOICE_TTS_MODEL:-tts-1}
      - VOICE_TTS_VOICE=${VOICE_TTS_VOICE:-alloy}

      # Мониторинг и логирование
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENABLE_PROMETHEUS=${ENABLE_PROMETHEUS:-0}
      - ENABLE_SYSTEM_MONITORING=${ENABLE_SYSTEM_MONITORING:-0}

      # Redis конфигурация
      - REDIS_URL=redis://redis:6379/0

    volumes:
      # Персистентное хранилище данных
      - ./data:/app/data
      - ./logs:/app/logs
      # Конфигурационные файлы (опционально)
      - ./docs:/app/docs:ro

    depends_on:
      - redis

    networks:
      - aivan-network

    # Ограничения ресурсов
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  qdrant:
    image: qdrant/qdrant:latest
    container_name: aivan-qdrant
    restart: unless-stopped
    environment:
      - QDRANT__STORAGE__KEEP_UPPER_STORAGE=true
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - aivan-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  redis:
    image: redis:7-alpine
    container_name: aivan-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - aivan-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Prometheus для мониторинга (опционально)
  prometheus:
    image: prom/prometheus:latest
    container_name: aivan-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - aivan-network
    profiles: ["monitoring"]

  # Grafana для визуализации метрик (опционально)
  grafana:
    image: grafana/grafana:latest
    container_name: aivan-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - aivan-network
    profiles: ["monitoring"]
    depends_on:
      - prometheus

volumes:
  qdrant_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  aivan-network:
    driver: bridge
