[project]
name = "telegram-legal-bot"
version = "0.1.0"
description = "Telegram bot for legal consultations powered by OpenAI GPT"
authors = [{name = "Your Name", email = "you@example.com"}]
readme = "README.md"
requires-python = ">=3.12"
dynamic = ["version"]
dependencies = [
    "aiogram>=3.4.0,<4.0.0",
    "openai>=1.40",
    "httpx[http2]>=0.27",
    "python-dotenv>=1.0.1",
    "aiohttp-socks>=0.10.1",
    "requests>=2.32.5",
    "PyPDF2>=3.0.1",
    "pdfplumber>=0.11.4",
    "python-docx>=1.1.0",
    "pytesseract>=0.3.10",
    "pdf2image>=1.17.0",
    "Pillow>=10.4.0",
    "paddlepaddle>=2.6.0",
    "paddleocr>=2.8.0",
    "reportlab>=4.2.0",
    "aiosqlite>=0.20.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "numpy>=2,<2.3",
    "ocrmypdf>=16.11.0",
    "pymupdf>=1.26.4"
]

[project.optional-dependencies]
prod = ["redis>=5.0.6", "prometheus-client>=0.20.0", "psutil>=5.9.0", "pydantic>=2.5.0"]
monitoring = ["prometheus-client>=0.20.0", "psutil>=5.9.0"]
scaling = ["redis>=5.0.6", "pydantic>=2.5.0"]
full = ["redis>=5.0.6", "prometheus-client>=0.20.0", "psutil>=5.9.0", "pydantic>=2.5.0"]

[project.scripts]
telegram-legal-bot = "telegram_legal_bot.main:main"

[tool.poetry]
packages = [
    # Устанавливаем модуль с точкой входа по layout src/
    { include = "telegram_legal_bot", from = "src" },
    # Параллельно публикуем текущий модуль "src" (используется в импортах: src.core)
    { include = "src", from = "." }
]

[tool.poetry.dependencies]
python = "^3.12"

# Core dependencies
aiogram = ">=3.4.0,<4.0.0"
openai = "^1.40"
httpx = {version = "^0.27", extras = ["http2"]}
python-dotenv = "^1.0.1"
aiohttp-socks = "^0.10.1"
requests = "^2.32.5"
PyPDF2 = "^3.0.1"
pdfplumber = "^0.11.4"
python-docx = "^1.1.0"
pytesseract = "^0.3.10"
pdf2image = "^1.17.0"
Pillow = "^10.4.0"
paddlepaddle = "^2.6.0"
paddleocr = "^2.8.0"
reportlab = "^4.2.0"
# Advanced database support
aiosqlite = "^0.20.0"

# Redis for caching and scaling
redis = {version = "^5.0.6", optional = true}

# Monitoring and metrics
prometheus-client = {version = "^0.20.0", optional = true}

# System monitoring
psutil = {version = "^5.9.0", optional = true}

# Data validation and serialization
pydantic = {version = "^2.5.0", optional = true}
pytest = "^8.4.2"
pytest-asyncio = "^1.2.0"
numpy = ">=2,<2.3"
ocrmypdf = "^16.11.0"
pymupdf = "^1.26.4"


[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"
black = "^24.8.0"
isort = "^5.13.2"
mypy = "^1.10.0"
types-redis = "^4.6.0.20240425"


[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

# --- стиль кода (по желанию, но удобно) ---
[tool.black]
line-length = 100
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 100
combine_as_imports = true

[tool.ruff]
target-version = "py312"
line-length = 100
select = ["E","F","I","W","UP","N","B","PL"]
ignore = ["E501"]
