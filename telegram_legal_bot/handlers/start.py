from __future__ import annotations

from aiogram import Router, types, F
from aiogram.filters import Command

from telegram_legal_bot.utils.message_formatter import md2
from telegram_legal_bot.ui.messages import BotMessages
from telegram_legal_bot.ui.animations import BotAnimations

router = Router(name="start")


@router.message(Command("start"))
async def cmd_start(msg: types.Message) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –ø—Ä–æ—Å—å–±–∞ —Å—Ä–∞–∑—É –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –±–µ–∑ –∫–Ω–æ–ø–æ–∫."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_name = msg.from_user.first_name if msg.from_user else None
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—á–∞—Ç–∏
        await BotAnimations.typing_animation(msg, 2.0)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–æ—Å—å–±—É –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å
        welcome_text = BotMessages.welcome_with_bold(user_name)
        hint = "\n\n–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äî —è –æ—Ç–≤–µ—á—É —Å—Ä–∞–∑—É."
        await msg.answer(welcome_text + hint, parse_mode="HTML")
    except Exception:
        # Fallback –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        fallback_text = f"""
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!

–Ø ‚Äî AIVAN, –≤–∞—à —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç ‚öñÔ∏è

–ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –û—Ç–≤–µ—á–∞—é –Ω–∞ –ø—Ä–∞–≤–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –†–§  
‚Ä¢ –ü—Ä–∏–≤–æ–∂—É —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–æ—Ä–º—ã
‚Ä¢ –î–∞—é –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

‚ö†Ô∏è –í–∞–∂–Ω–æ: —è –Ω–µ –∑–∞–º–µ–Ω—è—é —é—Ä–∏—Å—Ç–∞, –Ω–æ –ø–æ–º–æ–≥—É —Å–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è!
        """.strip()
        
        await msg.answer(fallback_text, parse_mode=None)


@router.message(Command("help"))  
async def cmd_help(msg: types.Message) -> None:
    """–ö—Ä–∞—Ç–∫–∞—è –ø–æ–º–æ—â—å –±–µ–∑ –∫–Ω–æ–ø–æ–∫."""
    try:
        help_text = BotMessages.help_main()
        await msg.answer(help_text, parse_mode="HTML")
    except Exception:
        # Fallback
        fallback_text = """
‚ÑπÔ∏è –°–ü–†–ê–í–ö–ê –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ

‚ùì –ö–∞–∫ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å:
1. –û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–æ
2. –£–∫–∞–∂–∏—Ç–µ –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏
3. –£–ø–æ–º—è–Ω–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å—Ä–æ–∫–∏

üî• –°–æ–≤–µ—Ç—ã:
‚Ä¢ –ü–∏—à–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ
‚Ä¢ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å—É–º–º—ã, –¥–∞—Ç—ã  
‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ –æ–±—â–∏—Ö —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫

üìö –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ø—Ä–∞–≤–∞!
        """.strip()
        
        await msg.answer(fallback_text, parse_mode=None)

