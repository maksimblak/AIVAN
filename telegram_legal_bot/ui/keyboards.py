# telegram_legal_bot/ui/keyboards.py
"""
–ö—Ä–∞—Å–∏–≤—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞.
"""

from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Optional


class BotKeyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞."""
    
    @staticmethod
    def main_menu() -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞."""
        keyboard = [
            [
                InlineKeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="ask_question"),
                InlineKeyboardButton(text="üìö –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∞–≤–∞", callback_data="law_categories")
            ],
            [
                InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile"),
                InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")
            ],
            [
                InlineKeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help"),
                InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def law_categories() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø—Ä–∞–≤–∞."""
        keyboard = [
            [
                InlineKeyboardButton(text="üè† –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ", callback_data="category_civil"),
                InlineKeyboardButton(text="‚öñÔ∏è –£–≥–æ–ª–æ–≤–Ω–æ–µ –ø—Ä–∞–≤–æ", callback_data="category_criminal")
            ],
            [
                InlineKeyboardButton(text="üíº –¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ", callback_data="category_labor"),
                InlineKeyboardButton(text="üè¢ –ù–∞–ª–æ–≥–æ–≤–æ–µ –ø—Ä–∞–≤–æ", callback_data="category_tax")
            ],
            [
                InlineKeyboardButton(text="üöó –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ", callback_data="category_admin"),
                InlineKeyboardButton(text="üë• –°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ", callback_data="category_family")
            ],
            [
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def help_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –ø–æ–º–æ—â–∏."""
        keyboard = [
            [
                InlineKeyboardButton(text="üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç", callback_data="quick_start"),
                InlineKeyboardButton(text="üí° –ö–∞–∫ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data="how_to_ask")
            ],
            [
                InlineKeyboardButton(text="üìã –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤", callback_data="examples"),
                InlineKeyboardButton(text="‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", callback_data="limitations")
            ],
            [
                InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π", callback_data="contact"),
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def question_actions(question_id: Optional[str] = None) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å."""
        data_suffix = f"_{question_id}" if question_id else ""
        keyboard = [
            [
                InlineKeyboardButton(text="üëç –ü–æ–ª–µ–∑–Ω–æ", callback_data=f"rate_good{data_suffix}"),
                InlineKeyboardButton(text="üëé –ù–µ –ø–æ–º–æ–≥–ª–æ", callback_data=f"rate_bad{data_suffix}")
            ],
            [
                InlineKeyboardButton(text="üîç –£—Ç–æ—á–Ω–∏—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data=f"clarify{data_suffix}"),
                InlineKeyboardButton(text="üìã –ü–æ—Ö–æ–∂–∏–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data=f"similar{data_suffix}")
            ],
            [
                InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def confirm_action(action: str, data: str) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π."""
        keyboard = [
            [
                InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_{action}_{data}"),
                InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"cancel_{action}")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def settings_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
        keyboard = [
            [
                InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="settings_notifications"),
                InlineKeyboardButton(text="üé® –¢–µ–º–∞", callback_data="settings_theme")
            ],
            [
                InlineKeyboardButton(text="üìù –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–æ–≤", callback_data="settings_format"),
                InlineKeyboardButton(text="üåç –Ø–∑—ã–∫", callback_data="settings_language")
            ],
            [
                InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", callback_data="clear_history"),
                InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def rate_limit_exceeded() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞."""
        keyboard = [
            [
                InlineKeyboardButton(text="‚è∞ –ö–æ–≥–¥–∞ –º–æ–∂–Ω–æ —Å–Ω–æ–≤–∞?", callback_data="check_rate_limit"),
                InlineKeyboardButton(text="üíé Premium", callback_data="upgrade_premium")
            ],
            [
                InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
            ]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def back_button(callback_data: str = "main_menu") -> InlineKeyboardMarkup:
        """–ü—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥."""
        keyboard = [
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data=callback_data)]
        ]
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def typing_indicators() -> List[str]:
        """–ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –ø–µ—á–∞—Ç–∏."""
        return [
            "ü§î –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –≤–æ–ø—Ä–æ—Å...",
            "üìö –ò–∑—É—á–∞—é –ø—Ä–∞–≤–æ–≤—É—é –±–∞–∑—É...", 
            "‚öñÔ∏è –§–æ—Ä–º–∏—Ä—É—é —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –æ—Ç–≤–µ—Ç...",
            "‚úçÔ∏è –û—Ñ–æ—Ä–º–ª—è—é —Ä–µ—à–µ–Ω–∏–µ..."
        ]
    
    @staticmethod
    def loading_animation() -> List[str]:
        """–ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏."""
        return [
            "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞",
            "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞.",
            "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞..",
            "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞..."
        ]
