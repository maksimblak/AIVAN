"""
UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è Telegram –±–æ—Ç–∞ –ò–ò-–ò–≤–∞–Ω
–°–æ–¥–µ—Ä–∂–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, —ç–º–æ–¥–∑–∏, —à–∞–±–ª–æ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
"""

from __future__ import annotations
import re
from html import escape as html_escape
# ============ –≠–ú–û–î–ó–ò –ö–û–ù–°–¢–ê–ù–¢–´ ============


class Emoji:
    """–ö–æ–ª–ª–µ–∫—Ü–∏—è —ç–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""

    ROBOT = "ü§ñ"
    LAW = "‚öñÔ∏è"
    DOCUMENT = "üìÑ"
    SEARCH = "üîç"
    IDEA = "üí°"
    WARNING = "‚ö†Ô∏è"
    SUCCESS = "‚úÖ"
    ERROR = "‚ùå"
    LOADING = "‚è≥"
    STAR = "‚≠ê"
    MAGIC = "‚ú®"

    CIVIL = "üìò"
    CRIMINAL = "üßë‚Äç‚öñÔ∏è"
    CORPORATE = "üè¢"
    CONTRACT = "üìù"
    LABOR = "‚öôÔ∏è"
    TAX = "üí∞"
    REAL_ESTATE = "üè†"
    IP = "üß†"
    ADMIN = "üèõÔ∏è"
    FAMILY = "üë™"

    BACK = "‚¨ÖÔ∏è"
    HELP = "‚ùì"
    STATS = "üìä"
    INFO = "‚ÑπÔ∏è"

    DIAMOND = "üíé"
    DOWNLOAD = "üì•"
    CLOCK = "üïí"
    CALENDAR = "üìÖ"

# ============ –®–ê–ë–õ–û–ù–´ –°–û–û–ë–©–ï–ù–ò–ô (MarkdownV2) ============

LEGAL_CATEGORIES = {
    "civil": {
        "name": "–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ",
        "emoji": Emoji.CIVIL,
        "description": "–ò–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –ª–∏—á–Ω—ã–µ –Ω–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
        "examples": ["–î–æ–≥–æ–≤–æ—Ä—ã", "–°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å", "–û–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞", "–î–µ–ª–∏–∫—Ç—ã"],
    },
    "corporate": {
        "name": "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ",
        "emoji": Emoji.CORPORATE,
        "description": "–°–æ–∑–¥–∞–Ω–∏–µ –∏ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü",
        "examples": ["–£—á—Ä–µ–∂–¥–µ–Ω–∏–µ –û–û–û", "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Ä—ã", "–†–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è", "M&A"],
    },
    "contract": {
        "name": "–î–æ–≥–æ–≤–æ—Ä–Ω–æ–µ –ø—Ä–∞–≤–æ",
        "emoji": Emoji.CONTRACT,
        "description": "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ, –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤",
        "examples": ["–ü–æ—Å—Ç–∞–≤–∫–∞", "–ü–æ–¥—Ä—è–¥", "–ê—Ä–µ–Ω–¥–∞", "–ó–∞–π–º"],
    },
    "labor": {
        "name": "–¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ",
        "emoji": Emoji.LABOR,
        "description": "–¢—Ä—É–¥–æ–≤—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞",
        "examples": ["–£–≤–æ–ª—å–Ω–µ–Ω–∏–µ", "–ó–∞—Ä–ø–ª–∞—Ç–∞", "–û—Ç–ø—É—Å–∫–∞", "–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞"],
    },
    "tax": {
        "name": "–ù–∞–ª–æ–≥–æ–≤–æ–µ –ø—Ä–∞–≤–æ",
        "emoji": Emoji.TAX,
        "description": "–ù–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏–µ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –§–ù–°",
        "examples": ["–ù–î–°", "–ù–∞–ª–æ–≥ –Ω–∞ –ø—Ä–∏–±—ã–ª—å", "–ù–î–§–õ", "–ü—Ä–æ–≤–µ—Ä–∫–∏"],
    },
    "real_estate": {
        "name": "–ü—Ä–∞–≤–æ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏",
        "emoji": Emoji.REAL_ESTATE,
        "description": "–°–¥–µ–ª–∫–∏ —Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å—é –∏ –∑–µ–º–µ–ª—å–Ω—ã–º–∏ —É—á–∞—Å—Ç–∫–∞–º–∏",
        "examples": ["–ö—É–ø–ª—è-–ø—Ä–æ–¥–∞–∂–∞", "–ê—Ä–µ–Ω–¥–∞", "–ò–ø–æ—Ç–µ–∫–∞", "–ö–∞–¥–∞—Å—Ç—Ä"],
    },
    "ip": {
        "name": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
        "emoji": Emoji.IP,
        "description": "–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞, —Ç–æ–≤–∞—Ä–Ω—ã–µ –∑–Ω–∞–∫–∏, –ø–∞—Ç–µ–Ω—Ç—ã",
        "examples": ["–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –¢–ó", "–ê–≤—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–∞–≤–∞", "–ü–∞—Ç–µ–Ω—Ç—ã", "–õ–∏—Ü–µ–Ω–∑–∏–∏"],
    },
    "admin": {
        "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ",
        "emoji": Emoji.ADMIN,
        "description": "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –≥–æ—Å–æ—Ä–≥–∞–Ω–∞–º–∏ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
        "examples": ["–õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏–µ", "–®—Ç—Ä–∞—Ñ—ã", "–ì–æ—Å—É—Å–ª—É–≥–∏", "–ö–æ–Ω—Ç—Ä–æ–ª—å"],
    },
    "criminal": {
        "name": "–£–≥–æ–ª–æ–≤–Ω–æ–µ –ø—Ä–∞–≤–æ",
        "emoji": Emoji.CRIMINAL,
        "description": "–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è –∏ —É–≥–æ–ª–æ–≤–Ω–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å",
        "examples": ["–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏—è", "–î–æ–ª–∂–Ω–æ—Å—Ç–Ω—ã–µ", "–ù–∞–ª–æ–≥–æ–≤—ã–µ", "–ó–∞—â–∏—Ç–∞"],
    },
    "family": {
        "name": "–°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ",
        "emoji": Emoji.FAMILY,
        "description": "–ë—Ä–∞–∫, —Ä–∞–∑–≤–æ–¥, –∞–ª–∏–º–µ–Ω—Ç—ã, –æ–ø–µ–∫–∞",
        "examples": ["–†–∞–∑–≤–æ–¥", "–ê–ª–∏–º–µ–Ω—Ç—ã", "–†–∞–∑–¥–µ–ª –∏–º—É—â–µ—Å—Ç–≤–∞", "–û–ø–µ–∫–∞"],
    },
}


def get_category_info(category_id: str) -> dict:
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∞–≤–∞"""
    return LEGAL_CATEGORIES.get(
        category_id,
        {
            "name": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è",
            "emoji": Emoji.LAW,
            "description": "–û–±—â–∏–µ –ø—Ä–∞–≤–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã",
            "examples": [],
        },
    )


# ============ –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï (MarkdownV2) ============


def escape_markdown_v2(text: str) -> str:
    """–≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è MarkdownV2"""
    special_chars = [
        "_",
        "*",
        "[",
        "]",
        "(",
        ")",
        "~",
        "`",
        ">",
        "#",
        "+",
        "-",
        "=",
        "|",
        "{",
        "}",
        ".",
        "!",
    ]
    for char in special_chars:
        text = text.replace(char, f"\\{char}")
    return text


# ============ HTML –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –î–õ–Ø STREAMING ============

# --- Telegram HTML sanitizer (allowlist) ---
ALLOWED_TAGS = {"b","strong","i","em","u","ins","s","strike","del","code","pre","a","br","tg-spoiler","blockquote"}

def sanitize_telegram_html(html: str) -> str:
    """
    –ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç–µ–≥–∏: b,i,u,s,code,pre,a(href=http/https),br.
    –£ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ–≥–æ–≤ ‚Äî —ç–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —É–≥–ª–æ–≤—ã–µ —Å–∫–æ–±–∫–∏.
    –£ <a> –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–π href, –ø—Ä–æ—á–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã –≤—ã–∫–∏–¥—ã–≤–∞–µ—Ç.
    """
    if not html:
        return ""

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º —É–≥–ª–æ–≤—ã–µ —Å–∫–æ–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –ø–æ—Ö–æ–∂–∏ –Ω–∞ –≤–∞–ª–∏–¥–Ω—ã–π —Ç–µ–≥
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º ALLOWED_TAGS –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    allowed_pattern = "|".join(ALLOWED_TAGS)
    html = re.sub(f"<(?!/?(?:{allowed_pattern})\\b)", "&lt;", html)

    tag_re = re.compile(r"</?([a-zA-Z0-9]+)(\s[^>]*)?>", re.IGNORECASE)

    def _clean_tag(match: re.Match) -> str:
        full = match.group(0)
        name = (match.group(1) or "").lower()
        attrs = match.group(2) or ""
        is_closing = full.startswith("</")

        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Ç–µ–≥–∏ ‚Äî —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é
        if name not in ALLOWED_TAGS:
            return html_escape(full)

        # <br> –¥–æ–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –∞—Ç—Ä–∏–±—É—Ç–æ–≤; –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–≥–æ –Ω–µ—Ç
        if name == "br":
            return "" if is_closing else "<br>"

        # –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–µ —Ç–µ–≥–∏
        if is_closing:
            return f"</{name}>"

        # –û—Ç–∫—Ä—ã–≤–∞—é—â–∏–µ –ø—Ä–æ—Å—Ç—ã–µ —Ç–µ–≥–∏ –±–µ–∑ –∞—Ç—Ä–∏–±—É—Ç–æ–≤ (–∫—Ä–æ–º–µ <a>)
        if name in {"b", "strong", "i", "em", "u", "s", "del", "code", "pre"}:
            return f"<{name}>"

        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ <a ...>
        if name == "a":
            href = ""
            if attrs:
                # href="..." –∏–ª–∏ href='...'
                m = re.search(r'href\s*=\s*"(.*?)"', attrs, re.IGNORECASE)
                if not m:
                    m = re.search(r"href\s*=\s*'([^']*)'", attrs, re.IGNORECASE)
                if m:
                    cand = (m.group(1) or "").strip()
                    if cand.lower().startswith(("http://", "https://")):
                        href = html_escape(cand, quote=True)
            # –µ—Å–ª–∏ href –≤–∞–ª–∏–¥–Ω—ã–π ‚Äî –æ—Å—Ç–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É; –∏–Ω–∞—á–µ —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª —Ç–µ–≥–∞
            return f'<a href="{href}">' if href else html_escape(full)

        # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        return html_escape(full)

    return tag_re.sub(_clean_tag, html)
